apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    kubernetes.io/enforce-mountable-secrets: "true"
  name: monitoring-service-account
  namespace: prometheus
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: metrics-reader
rules:
- apiGroups: [""]
  resources: ["services/proxy"]
  resourceNames: ["metrics-server", "https:metrics-server:", "http:metrics-server:"]
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: metrics-reader-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: metrics-reader
subjects:
- kind: ServiceAccount
  name: monitoring-service-account
  namespace: prometheus


# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   annotations:
#     kubernetes.io/enforce-mountable-secrets: "true"
#   name: cd
#   namespace: prometheus
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: cd-token
#   namespace: prometheus
#   labels:
#     kubernetes.io/legacy-token-invalid-since: 2025-05-25
#   annotations:
#     kubernetes.io/service-account.name: "cd"
# type: kubernetes.io/service-account-token
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: Role
# metadata:
#   namespace: prometheus
#   name: admin
# rules:
# - apiGroups: ["*"]
#   resources: ["*"]
#   verbs: ["*"]
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: admin-binding
#   namespace: prometheus
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: Role
#   name: admin
# subjects:
# - kind: ServiceAccount
#   name: cd
#   namespace: prometheus
  